<Welcome>
Change Codecademy to your name in the script to the right. Run the code to see what it does! As soon as you’re ready, move on to the next exercise to begin learning to write your own Python programs!
my_name = "Sumin Shin"
print("Hello and welcome " + my_name + "!")

<Comments>
Documentation is an important step in programming. Write a comment describing the first program you want to write!
#Anything

<Print>
Print the distinguished greeting “Hello world!”
print("Hello world!")

<Strings>
Print your name using the print() command.
Print("Sumin Shin")

<Variables>
Update the variable meal to reflect each meal of the day before we print it.
# We've defined the variable "meal" here to the name of the food we ate for breakfast!
meal = "An english muffin"
# Printing out breakfast
print("Breakfast:")
print(meal)
# Now update meal to be lunch!
meal = "Pizza"
# Printing out lunch
print("Lunch:")
print(meal)
# Now update "meal" to be dinner
meal = "Cheese cake"
# Printing out dinner
print("Dinner:")
print(meal)

<Numbers>
1. A recent movie-going experience has you excited to publish a review. You rush out of the cinema and hastily begin programming to create your movie-review website: The Big Screen’s Greatest Scenes Decided By A Machine.
Create the following variables and assign integer numbers to them: release_year and runtime.
# Define the release and runtime integer variables below:
release_year = 1998
runtime = 200
2. Now, create the variable rating_out_of_10 and assign it a float number between one and ten.
# Define the rating_out_of_10 float variable below: 
rating_out_of_10 = 6.3
###A floating-point number, or a float, is a decimal number. It can be used to represent fractional quantities as well as precise measurements. If you were measuring the length of your bedroom wall, calculating the average test score of a seventh-grade class, or storing a baseball player’s batting average for the 1998 season you would likely use a float.

<Calculations>
Python converts all ints to floats before performing division.
Print out the result of this equation: 25 * 68 + 13 / 28

<Changing Numbers>
Variables that are assigned numeric values can be treated the same as the numbers themselves. Two variables can be added together, divided by 2, and multiplied by a third variable without Python distinguishing between the variables and literals (like the number 2 in this example). 

<Exponents>
Python can also perform exponentiation. 
# 2 to the 10th power, or 1024
print(2 ** 10)

<Modulo>
Python offers a companion to the division operator called the modulo operator. The modulo operator is indicated by % and gives the remainder of a division calculation. If the number is divisible, then the result of the modulo operator will be 0.
# Prints 4 because 29 / 5 is 5 with a remainder of 4
print(29 % 5)

<Concatenation>
The + operator doesn’t just add two numbers, it can also “add” two strings!
greeting_text = "Hey there!"
question_text = "How are you doing?"
full_text = greeting_text + question_text
# Prints "Hey there!How are you doing?"
print(full_text)

<Plus Equals>
